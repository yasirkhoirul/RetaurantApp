// Mocks generated by Mockito 5.4.6 from annotations
// in restaurant_app/test/list_restoran_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_app/api/data/restoran_api.dart' as _i4;
import 'package:restaurant_app/api/model/detail_restoran.dart' as _i3;
import 'package:restaurant_app/api/model/restoran_model.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRestoranlist_0 extends _i1.SmartFake implements _i2.Restoranlist {
  _FakeRestoranlist_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSearchRestoran_1 extends _i1.SmartFake
    implements _i2.SearchRestoran {
  _FakeSearchRestoran_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDetailRestoran_2 extends _i1.SmartFake
    implements _i3.DetailRestoran {
  _FakeDetailRestoran_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeReviewPostResponse_3 extends _i1.SmartFake
    implements _i3.ReviewPostResponse {
  _FakeReviewPostResponse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Apiservice].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiservice extends _i1.Mock implements _i4.Apiservice {
  MockApiservice() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Restoranlist> getRestoranlist() =>
      (super.noSuchMethod(
            Invocation.method(#getRestoranlist, []),
            returnValue: _i5.Future<_i2.Restoranlist>.value(
              _FakeRestoranlist_0(
                this,
                Invocation.method(#getRestoranlist, []),
              ),
            ),
          )
          as _i5.Future<_i2.Restoranlist>);

  @override
  _i5.Future<_i2.SearchRestoran> getSearchRestoran(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#getSearchRestoran, [query]),
            returnValue: _i5.Future<_i2.SearchRestoran>.value(
              _FakeSearchRestoran_1(
                this,
                Invocation.method(#getSearchRestoran, [query]),
              ),
            ),
          )
          as _i5.Future<_i2.SearchRestoran>);

  @override
  _i5.Future<_i3.DetailRestoran> getDetailRestoran(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getDetailRestoran, [id]),
            returnValue: _i5.Future<_i3.DetailRestoran>.value(
              _FakeDetailRestoran_2(
                this,
                Invocation.method(#getDetailRestoran, [id]),
              ),
            ),
          )
          as _i5.Future<_i3.DetailRestoran>);

  @override
  _i5.Future<_i3.ReviewPostResponse> postReview(
    String? id,
    String? name,
    String? review,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#postReview, [id, name, review]),
            returnValue: _i5.Future<_i3.ReviewPostResponse>.value(
              _FakeReviewPostResponse_3(
                this,
                Invocation.method(#postReview, [id, name, review]),
              ),
            ),
          )
          as _i5.Future<_i3.ReviewPostResponse>);
}
